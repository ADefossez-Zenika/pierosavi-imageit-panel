{"version":3,"sources":["../src/pictureit_ctrl.js"],"names":["ValueColorMapping","value","colorName","ColorMapping","name","color","Sensor","metric","xlocation","ylocation","format","bgColor","fontColor","size","visible","renderValue","valueFormatted","valueUnit","displayName","link_url","resolvedLink","rectangular","group","Group","alignment","x","y","sameSize","width","normalizeColor","toLowerCase","_","MetricsPanelCtrl","getWidth","interact","panelDefaults","colorMappings","colorMappingMap","valueMappings","metricValues","seriesList","series","bgimage","sensors","groups","useLabelGroupings","height","templateSrv","sizecoefficient","uncache","isTheFirstRender","PictureItCtrl","$scope","$injector","$sce","defaults","panel","events","on","onInitEditMode","bind","render","onDataReceived","dataList","dataListLength","length","push","target","datapoints","refreshImage","Math","random","index","splice","lastSensor","sensor","result","ctrl","map","g","alert","JSON","stringify","addEditorTab","scope","elem","attrs","$panelContainer","find","pixelStrToNum","str","parseInt","substr","getGroup","css","metricMap","keyBy","valueMappingsMap","mapping","dragEventSetup","image","document","getElementById","imageWidth","offsetWidth","sensorWidth","font","newValue","max","panelWidth","ylocationStr","toString","xlocationStr","alignSensors","sizeStr","borderRadius","undefined","replace","effectiveName","mValue","valueMapping","colorMapping","sprintf","window","draggable","inertia","restrict","restriction","endOnly","elementRect","top","left","bottom","right","autoScroll","onmove","event","parseFloat","getAttribute","dx","dy","style","webkitTransform","transform","setAttribute","onend","imageHeight","offsetHeight","xpercentage","ypercentage","newX","round","newY","nextTop","nextX","sensorHeight","renderingCompleted","refreshColorMappings","indexOf","toRemove","split","a","startsWith","endsWith","icon","repeatCount","repeat","slice","imgUrl","imgWidth","imgHeight","join","trustAsHtml","templateUrl"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\r\nimport {MetricsPanelCtrl} from \"app/plugins/sdk\";\r\nimport \"./sprintf.js\";\r\nimport \"./angular-sprintf.js\";\r\nimport getWidth from './stringwidth/strwidth.js';\r\nimport interact from './libs/interact';\r\n\r\nconst panelDefaults = {\r\n    colorMappings: [],\r\n    colorMappingMap: [],\r\n    valueMappings: [],\r\n    metricValues: [],\r\n    seriesList: [],\r\n    series: [],\r\n    bgimage: '',\r\n    sensors: [],\r\n    groups: [],\r\n    useLabelGroupings: false,\r\n    height: '400px',\r\n    width: '100px',\r\n    templateSrv: null,\r\n    sizecoefficient: 20,\r\n    //uncache is a random number added to the img url to refresh it\r\n    uncache: 0\r\n};\r\n\r\nlet isTheFirstRender = true\r\n\r\nexport class PictureItCtrl extends MetricsPanelCtrl {\r\n\r\n    constructor($scope, $injector, $sce, templateSrv) {\r\n        super($scope, $injector);\r\n        _.defaults(this.panel, panelDefaults);\r\n        this.templateSrv = templateSrv;\r\n        this.$sce = $sce;\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('panel-initialized', this.render.bind(this));\r\n        this.events.on('data-received', this.onDataReceived.bind(this));\r\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    }\r\n\r\n    onDataReceived(dataList) {\r\n        var dataListLength = dataList.length;\r\n        this.panel.metricValues = [];\r\n        for (var series = 0; series < dataListLength; series++) {\r\n            this.panel.metricValues.push({\r\n                name: dataList[series].target,\r\n                value: dataList[series].datapoints[dataList[series].datapoints.length - 1][0]\r\n            });\r\n        }\r\n\r\n        if(!isTheFirstRender) {\r\n            this.refreshImage()\r\n        } else {\r\n            isTheFirstRender = false\r\n        }\r\n        \r\n\r\n        this.render();\r\n    }\r\n\r\n    refreshImage(){\r\n        this.panel.uncache = Math.random()\r\n    }\r\n\r\n    deleteSensor(index) {\r\n        this.panel.sensors.splice(index, 1);\r\n    }\r\n\r\n    addSensor() {\r\n        if (this.panel.sensors.length === 0) {\r\n            this.panel.sensors.push(\r\n                new Sensor('A', 50, 25, '%.2f', 'rgba(64,64,64,1.000)', 'rgba(255,255,255,1.000)', 14, true)\r\n            );\r\n        } else {\r\n            var lastSensor = this.panel.sensors[this.panel.sensors.length - 1];\r\n            this.panel.sensors.push(\r\n                new Sensor(lastSensor.metric, 50, 25, lastSensor.format, lastSensor.bgColor, lastSensor.color, lastSensor.size, true)\r\n            );\r\n        }\r\n    }\r\n\r\n    moveSensorUp(index) {\r\n        var sensor = this.panel.sensors[index]\r\n        this.panel.sensors.splice(index, 1)\r\n        this.panel.sensors.splice(index-1,0,sensor);\r\n    }\r\n\r\n    moveSensorDown(index) {\r\n        var sensor = this.panel.sensors[index]\r\n        this.panel.sensors.splice(index, 1)\r\n        this.panel.sensors.splice(index+1,0,sensor);\r\n    }\r\n\r\n    deleteGroup(index) {\r\n        this.panel.groups.splice(index, 1);\r\n    }\r\n\r\n    addGroup() {\r\n        this.panel.groups.push(\r\n            new Group('A', \"left\", 50, 50)\r\n        );\r\n    }\r\n\r\n    getAvailableGroups() {\r\n\r\n        var result = ctrl.panel.groups.map(g => g.name);\r\n        alert(\"RESULT: \" + JSON.stringify(result))\r\n        return result;\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.addEditorTab('Sensor', 'public/plugins/bessler-pictureit-panel/editor.html', 2);\r\n        this.addEditorTab('Color Mapping', 'public/plugins/bessler-pictureit-panel/colors.html', 3);\r\n        this.addEditorTab('Value Color Mapping', 'public/plugins/bessler-pictureit-panel/mappings.html', 4);\r\n    }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        const $panelContainer = elem.find('.panel-container');\r\n\r\n        function pixelStrToNum(str) {\r\n            return parseInt(str.substr(0, str.length - 2));\r\n        }\r\n\r\n        function getGroup(name) {\r\n            for (let group of ctrl.panel.groups) {\r\n                if(group.name == name){\r\n                    return group;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function render() {\r\n\r\n            if (!ctrl.panel.sensors) {\r\n                return;\r\n            }\r\n\r\n            let width = pixelStrToNum($panelContainer.css(\"width\"));\r\n            let height = pixelStrToNum($panelContainer.css(\"height\"));\r\n            let metricMap = _.keyBy(ctrl.panel.metricValues, value => value.name);\r\n            let valueMappingsMap = _.keyBy(ctrl.panel.valueMappings, mapping => mapping.value);\r\n\r\n            for (let sensor of ctrl.panel.sensors) {\r\n\r\n                dragEventSetup(sensor);\r\n\r\n                let image = document.getElementById('pictureit-image');\r\n\r\n                if (image != null) {\r\n                    let imageWidth = document.getElementById('pictureit-image').offsetWidth;\r\n                    sensor.size = imageWidth * ctrl.panel.sizecoefficient / 1600\r\n                }\r\n\r\n                var sensorWidth = getWidth(sensor.displayName, { font: 'Arial', size: sensor.size }) + 20;\r\n                if(ctrl.panel.useLabelGroupings){\r\n                    var group = getGroup(sensor.group.name)\r\n                    if(group != null && group.sameSize){\r\n                        var newValue = Math.max(group.width, sensorWidth);\r\n                        group.width = newValue;\r\n                        sensor.width = newValue;\r\n                    }else{\r\n                        sensor.panelWidth = sensorWidth + \"px\";  \r\n                        sensor.width = sensorWidth;\r\n                    }\r\n                }else{\r\n                    sensor.panelWidth = sensorWidth + \"px\";  \r\n                    sensor.width = sensorWidth;\r\n                }\r\n            }\r\n\r\n            for (let sensor of ctrl.panel.sensors) {\r\n                if(ctrl.panel.useLabelGroupings && group.sameSize){\r\n                    var group = getGroup(sensor.group.name)\r\n                    if(group != null){\r\n                        sensor.panelWidth = group.width + \"px\";  \r\n                        sensor.width = group.width;\r\n                    }\r\n                }\r\n\r\n                if(!ctrl.panel.useLabelGroupings){\r\n                    sensor.ylocationStr = sensor.ylocation.toString() + \"px\";\r\n                    sensor.xlocationStr = sensor.xlocation.toString() + \"px\";\r\n                }else{\r\n                    alignSensors();\r\n                }\r\n                sensor.sizeStr = sensor.size.toString() + \"px\";\r\n                // sensor.bgColor = 'rgb(64, 64, 64)';\r\n                \r\n                if(sensor.rectangular){\r\n                    sensor.borderRadius = '5%'\r\n                }else{\r\n                    sensor.borderRadius = '50%'\r\n                }\r\n\r\n                if(sensor.link_url != undefined) {\r\n                    sensor.resolvedLink =ctrl.templateSrv.replace(sensor.link_url);\r\n                }\r\n\r\n                //We need to replace possible variables in the sensors name\r\n                var effectiveName = ctrl.templateSrv.replace(sensor.metric);\r\n\r\n                var mValue = metricMap[effectiveName];\r\n                if (mValue === undefined) {\r\n                    mValue = {name: \"dummy\", value: 'null'};\r\n                }\r\n\r\n                var valueMapping = valueMappingsMap[mValue.value];\r\n\r\n                if (valueMapping !== undefined) {\r\n                    let colorMapping = ctrl.panel.colorMappingMap[valueMapping.colorName];\r\n                    if (colorMapping !== undefined) {\r\n                        sensor.bgColor = colorMapping.color;\r\n                    }\r\n                }\r\n\r\n                //finally format the value itself\r\n                sensor.valueFormatted = sprintf(sensor.format,mValue.value);\r\n            }\r\n\r\n            \r\n        }\r\n\r\n        function dragEventSetup(sensor) {\r\n            \r\n            window.interact('#' + sensor.metric).draggable({\r\n                inertia: true,\r\n                restrict: {\r\n                restriction: \"#draggableparent\",\r\n                endOnly: true,\r\n                elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\r\n                },\r\n                autoScroll: true,\r\n                onmove: function (event) {\r\n                    var target = event.target,\r\n                    // keep the dragged position in the data-x/data-y attributes\r\n                    x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,\r\n                    y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\r\n\r\n                    // translate the element\r\n                    target.style.webkitTransform =\r\n                    target.style.transform =\r\n                    'translate(' + x + 'px, ' + y + 'px)';\r\n\r\n                    // update the position attributes\r\n                    target.setAttribute('data-x', x);\r\n                    target.setAttribute('data-y', y);\r\n\r\n                },\r\n                onend: function (event) {\r\n                    var target = event.target;\r\n\r\n                    let imageHeight = document.getElementById('pictureit-image').offsetHeight;\r\n                    let imageWidth = document.getElementById('pictureit-image').offsetWidth;\r\n\r\n                    let x = target.getAttribute('data-x');\r\n                    let y = target.getAttribute('data-y')\r\n\r\n                    // get percentage of relative distance from starting point \r\n                    let xpercentage = (x * 100) / imageWidth;\r\n                    let ypercentage = (y * 100) / imageHeight;\r\n\r\n                    // browsers dont render more than 4 decimals so better cut away the others\r\n                    let newX = parseInt(target.style.left) + xpercentage;\r\n                    newX = Math.round(newX * 10000) / 10000\r\n\r\n                    let newY = parseInt(target.style.top) + ypercentage;\r\n                    newY = Math.round(newY * 10000) / 10000\r\n\r\n                    target.style.webkitTransform =\r\n                    target.style.transform =\r\n                    'translate(0px, 0px)';\r\n                    \r\n                    // manually set the new style so I don't need to render() again\r\n                    target.style.left = newX + '%'\r\n                    target.style.top = newY + '%'\r\n\r\n                    // really update the sensor values\r\n                    sensor.xlocation = newX\r\n                    sensor.ylocation = newY\r\n\r\n                    // reset the starting sensor points\r\n                    target.setAttribute('data-x', 0);\r\n                    target.setAttribute('data-y', 0);\r\n                }\r\n            });\r\n        }\r\n\r\n        function alignSensors(){\r\n            for (let group of ctrl.panel.groups) {\r\n                group.nextTop = undefined;\r\n                group.nextX = undefined;\r\n            }\r\n            for (let sensor of ctrl.panel.sensors) {\r\n                var sensorHeight = sensor.size + 30;\r\n                var sensorWidth = sensor.width + 10;\r\n                var group = getGroup(sensor.group.name)\r\n                if(group.alignment == \"left\"){\r\n                    if(group.nextTop === undefined){\r\n                        group.nextTop = group.y;\r\n                    }\r\n                    sensor.ylocationStr = group.nextTop + \"px\";\r\n                    sensor.xlocationStr = group.x + \"px\";\r\n                    group.nextTop = group.nextTop + sensorHeight;\r\n                } else if(group.alignment == \"middle\"){\r\n                    if(group.nextTop === undefined){\r\n                        group.nextTop = group.y;\r\n                    }\r\n                    sensor.ylocationStr = group.nextTop + \"px\";\r\n                    if(group.sameSize){\r\n                        sensor.xlocationStr = (group.x - (group.width/2)) + \"px\";\r\n                    }else{\r\n                        sensor.xlocationStr = (group.x - (sensor.width/2))+ \"px\";\r\n                    }\r\n                    group.nextTop = group.nextTop + sensorHeight;\r\n                } else if(group.alignment == \"right\"){\r\n                    if(group.nextTop === undefined){\r\n                        group.nextTop = group.y;\r\n                    }\r\n                    sensor.ylocationStr = group.nextTop + \"px\";\r\n                    if(group.sameSize){\r\n                        sensor.xlocationStr = (group.x - group.width) + \"px\";\r\n                    }else{\r\n                        sensor.xlocationStr = (group.x - sensor.width)+ \"px\";\r\n                    }\r\n                    group.nextTop = group.nextTop + sensorHeight;\r\n                } else if(group.alignment == \"top\"){\r\n                    if(group.nextX === undefined){\r\n                        group.nextX = group.x;\r\n                    }\r\n                    sensor.xlocationStr = group.nextX + \"px\";\r\n                    sensor.ylocationStr = group.y + \"px\";\r\n                    group.nextX = group.nextX + sensorWidth;\r\n                }    \r\n            }\r\n        }\r\n\r\n        this.events.on('render', function () {\r\n            render();\r\n            ctrl.renderingCompleted();\r\n        });\r\n    }\r\n\r\n    //------------------\r\n    // Color mapping stuff\r\n    //------------------\r\n\r\n    addColorMapping() {\r\n        this.panel.colorMappings.push(new ColorMapping('name', '#FFFFFF'));\r\n        this.refreshColorMappings();\r\n    }\r\n\r\n    removeColorMapping(map) {\r\n        var index = _.indexOf(this.panel.colorMappings, map);\r\n        this.panel.colorMappings.splice(index, 1);\r\n        this.refreshColorMappings();\r\n    }\r\n\r\n    refreshColorMappings() {\r\n        this.panel.colorMappingMap = _.keyBy(this.panel.colorMappings, mapping => mapping.name);\r\n        this.render();\r\n    }\r\n\r\n\r\n    //------------------\r\n    // Mapping stuff\r\n    //------------------\r\n\r\n    addValueMappingMap() {\r\n        this.panel.valueMappings.push(new ValueColorMapping('value', ''));\r\n    }\r\n\r\n    removeValueMappingMap(toRemove) {\r\n        var index = _.indexOf(this.panel.valueMappings, toRemove);\r\n        this.panel.valueMappings.splice(index, 1);\r\n        this.render();\r\n    }\r\n\r\n    replaceTokens(value) {\r\n\r\n        if (!value) { return value; }\r\n        value = value + \"\";\r\n        value = value.split(\" \").map(a => {\r\n            if (a.startsWith(\"_fa-\") && a.endsWith(\"_\")) {\r\n                let icon = a.replace(/\\_/g, \"\").split(\",\")[0];\r\n                let color = a.indexOf(\",\") > -1 ? ` style=\"color:${normalizeColor(a.replace(/\\_/g, \"\").split(\",\")[1])}\" ` : \"\";     \r\n                let repeatCount = a.split(\",\").length > 2 ? +(a.replace(/\\_/g, \"\").split(\",\")[2]) : 1;\r\n                a = `<i class=\"fa ${icon}\" ${color}></i> `.repeat(repeatCount);\r\n                \r\n            } else if (a.startsWith(\"_img-\") && a.endsWith(\"_\")) {\r\n                a = a.slice(0, -1);\r\n                let imgUrl = a.replace(\"_img-\", \"\").split(\",\")[0];\r\n                let imgWidth = a.split(\",\").length > 1 ? a.replace(\"_img-\", \"\").split(\",\")[1] : \"20px\";\r\n                let imgHeight = a.split(\",\").length > 2 ? a.replace(\"_img-\", \"\").split(\",\")[2] : \"20px\";\r\n                let repeatCount = a.split(\",\").length > 3 ? +(a.replace(\"_img-\", \"\").split(\",\")[3]) : 1;\r\n                a = `<img width=\"${imgWidth}\" height=\"${imgHeight}\" src=\"${imgUrl}\"/>`.repeat(repeatCount);\r\n            }\r\n            return a;\r\n        }).join(\" \");\r\n\r\n        return this.$sce.trustAsHtml(value);\r\n    }\r\n\r\n    /* addRangeMappingMap() {\r\n     this.panel.rangeMappingMap.push({from: '', to: '', text: ''});\r\n     }\r\n\r\n     removeRangeMappingMap(rangeMap) {\r\n     var index = _.indexOf(this.panel.rangeMaps, rangeMap);\r\n     this.panel.rangeMappingMap.splice(index, 1);\r\n     this.render();\r\n     };*/\r\n}\r\n\r\nfunction ValueColorMapping(value,\r\n                           colorName) {\r\n    'use strict';\r\n    this.value = value;\r\n    this.colorName = colorName;\r\n}\r\n\r\n\r\nfunction ColorMapping(name, color) {\r\n    'use strict';\r\n    this.name = name;\r\n    this.color = color;\r\n}\r\n\r\nfunction Sensor(metric,\r\n                xlocation,\r\n                ylocation,\r\n                format,\r\n                bgColor,\r\n                fontColor,\r\n                size,\r\n                visible) {\r\n    'use strict';\r\n    this.metric = metric;\r\n    this.xlocation = xlocation;\r\n    this.ylocation = ylocation;\r\n    this.format = format;\r\n    this.bgColor = bgColor;\r\n    this.fontColor = fontColor;\r\n    this.size = size;\r\n    this.visible = visible;\r\n    this.renderValue = false;\r\n    this.valueFormatted = '';\r\n    this.valueUnit = '';\r\n    this.displayName = '';\r\n    this.link_url = '';\r\n    this.resolvedLink = '';\r\n    this.rectangular = true;\r\n    this.group = 'A';\r\n}\r\n\r\nfunction Group(name, alignment, x, y) {\r\n    'use strict';\r\n    this.name = name;\r\n    this.alignment = alignment;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.sameSize = false;\r\n    this.width = 100;\r\n}\r\n\r\nfunction normalizeColor(color) {\r\n    \r\n    if (color.toLowerCase() === \"green\") {\r\n        return \"rgba(50, 172, 45, 0.97)\";\r\n    } else if (color.toLowerCase() === \"orange\") {\r\n        return \"rgba(237, 129, 40, 0.89)\";\r\n    } else if (color.toLowerCase() === \"red\") {\r\n        return \"rgba(245, 54, 54, 0.9)\";\r\n    } else { return color.toLowerCase(); }\r\n};\r\n\r\nPictureItCtrl.templateUrl = 'module.html';\r\n"],"file":"pictureit_ctrl.js"}