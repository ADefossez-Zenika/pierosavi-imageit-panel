{"version":3,"sources":["../src/pictureit_ctrl.js"],"names":["ValueColorMapping","value","colorName","ColorMapping","name","color","Sensor","metric","xlocation","ylocation","format","bgcolor","fontColor","size","bordercolor","visible","renderValue","valueFormatted","valueUnit","displayName","link_url","resolvedLink","rectangular","group","Group","alignment","x","y","sameSize","width","_","MetricsPanelCtrl","getWidth","interact","panelDefaults","colorMappings","colorMappingMap","valueMappings","metricValues","seriesList","series","bgimage","sensors","groups","useLabelGroupings","height","templateSrv","sizecoefficient","uncache","isTheFirstRender","PictureItCtrl","$scope","$injector","defaults","panel","events","on","onInitEditMode","bind","render","onDataReceived","dataList","dataListLength","length","push","target","datapoints","console","log","refreshImage","Math","random","index","splice","lastSensor","sensor","result","ctrl","map","g","alert","JSON","stringify","addEditorTab","scope","elem","attrs","$panelContainer","find","pixelStrToNum","str","parseInt","substr","getGroup","css","metricMap","keyBy","valueMappingsMap","mapping","dragEventSetup","image","document","getElementById","imageWidth","offsetWidth","sensorWidth","font","newValue","max","panelWidth","ylocationStr","toString","xlocationStr","alignSensors","sizeStr","borderRadius","undefined","replace","effectiveName","mValue","valueMapping","colorMapping","sprintf","window","draggable","inertia","restrict","restriction","endOnly","elementRect","top","left","bottom","right","autoScroll","onmove","event","parseFloat","getAttribute","dx","dy","style","webkitTransform","transform","setAttribute","onend","imageHeight","offsetHeight","xpercentage","ypercentage","newX","round","newY","nextTop","nextX","sensorHeight","renderingCompleted","refreshColorMappings","indexOf","toRemove","templateUrl"],"mappings":"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","file":"pictureit_ctrl.js","sourcesContent":["import _ from \"lodash\";\r\nimport {MetricsPanelCtrl} from \"app/plugins/sdk\";\r\nimport \"./sprintf.js\";\r\nimport \"./angular-sprintf.js\";\r\nimport getWidth from './stringwidth/strwidth.js';\r\nimport interact from './libs/interact';\r\n\r\nconst panelDefaults = {\r\n    colorMappings: [],\r\n    colorMappingMap: [],\r\n    valueMappings: [],\r\n    metricValues: [],\r\n    seriesList: [],\r\n    series: [],\r\n    bgimage: '',\r\n    sensors: [],\r\n    groups: [],\r\n    useLabelGroupings: false,\r\n    height: '400px',\r\n    width: '100px',\r\n    templateSrv: null,\r\n    sizecoefficient: 20,\r\n    //uncache is a random number added to the img url to refresh it\r\n    uncache: 0\r\n};\r\n\r\nlet isTheFirstRender = true\r\n\r\nexport class PictureItCtrl extends MetricsPanelCtrl {\r\n\r\n\r\n    constructor($scope, $injector, templateSrv) {\r\n        super($scope, $injector);\r\n        _.defaults(this.panel, panelDefaults);\r\n        this.templateSrv = templateSrv;\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('panel-initialized', this.render.bind(this));\r\n        this.events.on('data-received', this.onDataReceived.bind(this));\r\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    }\r\n\r\n    onDataReceived(dataList) {\r\n        var dataListLength = dataList.length;\r\n        this.panel.metricValues = [];\r\n        for (var series = 0; series < dataListLength; series++) {\r\n            this.panel.metricValues.push({\r\n                name: dataList[series].target,\r\n                value: dataList[series].datapoints[dataList[series].datapoints.length - 1][0]\r\n            });\r\n        }\r\n\r\n        console.log(isTheFirstRender)\r\n\r\n        if(!isTheFirstRender) {\r\n            this.refreshImage()\r\n        } else {\r\n            isTheFirstRender = false\r\n        }\r\n        \r\n\r\n        this.render();\r\n    }\r\n\r\n    refreshImage(){\r\n        this.panel.uncache = Math.random()\r\n    }\r\n\r\n    deleteSensor(index) {\r\n        this.panel.sensors.splice(index, 1);\r\n    }\r\n\r\n    addSensor() {\r\n        if (this.panel.sensors.length === 0) {\r\n            this.panel.sensors.push(\r\n                new Sensor('A', 50, 25, '%.2f', 'rgba(0, 0, 0, 0.58)', '#ffffff', 14, 'rgb(251, 4, 4)', true)\r\n            );\r\n        } else {\r\n            var lastSensor = this.panel.sensors[this.panel.sensors.length - 1];\r\n            this.panel.sensors.push(\r\n                new Sensor(lastSensor.metric, 50, 25, lastSensor.format, lastSensor.bgcolor, lastSensor.color, lastSensor.size, lastSensor.bordercolor, true)\r\n            );\r\n        }\r\n    }\r\n\r\n    moveSensorUp(index) {\r\n        var sensor = this.panel.sensors[index]\r\n        this.panel.sensors.splice(index, 1)\r\n        this.panel.sensors.splice(index-1,0,sensor);\r\n    }\r\n\r\n    moveSensorDown(index) {\r\n        var sensor = this.panel.sensors[index]\r\n        this.panel.sensors.splice(index, 1)\r\n        this.panel.sensors.splice(index+1,0,sensor);\r\n    }\r\n\r\n    deleteGroup(index) {\r\n        this.panel.groups.splice(index, 1);\r\n    }\r\n\r\n    addGroup() {\r\n        this.panel.groups.push(\r\n            new Group('A', \"left\", 200, 200)\r\n        );\r\n    }\r\n\r\n    getAvailableGroups() {\r\n\r\n        var result = ctrl.panel.groups.map(g => g.name);\r\n        alert(\"RESULT: \" + JSON.stringify(result))\r\n        return result;\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.addEditorTab('Sensor', 'public/plugins/bessler-pictureit-panel/editor.html', 2);\r\n        this.addEditorTab('Color Mapping', 'public/plugins/bessler-pictureit-panel/colors.html', 3);\r\n        this.addEditorTab('Value Color Mapping', 'public/plugins/bessler-pictureit-panel/mappings.html', 4);\r\n    }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        const $panelContainer = elem.find('.panel-container');\r\n\r\n        function pixelStrToNum(str) {\r\n            return parseInt(str.substr(0, str.length - 2));\r\n        }\r\n\r\n        function getGroup(name) {\r\n            for (let group of ctrl.panel.groups) {\r\n                if(group.name == name){\r\n                    return group;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function render() {\r\n\r\n            if (!ctrl.panel.sensors) {\r\n                return;\r\n            }\r\n\r\n            let width = pixelStrToNum($panelContainer.css(\"width\"));\r\n            let height = pixelStrToNum($panelContainer.css(\"height\"));\r\n            let metricMap = _.keyBy(ctrl.panel.metricValues, value => value.name);\r\n            let valueMappingsMap = _.keyBy(ctrl.panel.valueMappings, mapping => mapping.value);\r\n\r\n            for (let sensor of ctrl.panel.sensors) {\r\n\r\n                dragEventSetup(sensor);\r\n\r\n                let image = document.getElementById('pictureit-image');\r\n\r\n                if (image != null) {\r\n                    let imageWidth = document.getElementById('pictureit-image').offsetWidth;\r\n                    sensor.size = imageWidth * ctrl.panel.sizecoefficient / 1600\r\n                }\r\n\r\n                var sensorWidth = getWidth(sensor.displayName, { font: 'Arial', size: sensor.size }) + 20;\r\n                if(ctrl.panel.useLabelGroupings){\r\n                    var group = getGroup(sensor.group.name)\r\n                    if(group != null && group.sameSize){\r\n                        var newValue = Math.max(group.width, sensorWidth);\r\n                        group.width = newValue;\r\n                        sensor.width = newValue;\r\n                    }else{\r\n                        sensor.panelWidth = sensorWidth + \"px\";  \r\n                        sensor.width = sensorWidth;\r\n                    }\r\n                }else{\r\n                    sensor.panelWidth = sensorWidth + \"px\";  \r\n                    sensor.width = sensorWidth;\r\n                }\r\n            }\r\n\r\n            for (let sensor of ctrl.panel.sensors) {\r\n                if(ctrl.panel.useLabelGroupings && group.sameSize){\r\n                    var group = getGroup(sensor.group.name)\r\n                    if(group != null){\r\n                        sensor.panelWidth = group.width + \"px\";  \r\n                        sensor.width = group.width;\r\n                    }\r\n                }\r\n                sensor.visible = sensor.xlocation < width && sensor.ylocation < height;\r\n                if(!ctrl.panel.useLabelGroupings){\r\n                    sensor.ylocationStr = sensor.ylocation.toString() + \"px\";\r\n                    sensor.xlocationStr = sensor.xlocation.toString() + \"px\";\r\n                }else{\r\n                    alignSensors();\r\n                }\r\n                sensor.sizeStr = sensor.size.toString() + \"px\";\r\n                sensor.bgcolor = 'rgb(64, 64, 64)';\r\n                sensor.bordercolor = 'rgb(64, 64, 64)';\r\n                \r\n                if(sensor.rectangular){\r\n                    sensor.borderRadius = '5%'\r\n                }else{\r\n                    sensor.borderRadius = '50%'\r\n                }\r\n\r\n                if(sensor.link_url != undefined) {\r\n                    sensor.resolvedLink =ctrl.templateSrv.replace(sensor.link_url);\r\n                }\r\n\r\n                //We need to replace possible variables in the sensors name\r\n                var effectiveName = ctrl.templateSrv.replace(sensor.metric);\r\n\r\n                var mValue = metricMap[effectiveName];\r\n                if (mValue === undefined) {\r\n                    mValue = {name: \"dummy\", value: 'null'};\r\n                }\r\n\r\n                var valueMapping = valueMappingsMap[mValue.value];\r\n\r\n                if (valueMapping !== undefined) {\r\n                    let colorMapping = ctrl.panel.colorMappingMap[valueMapping.colorName];\r\n                    if (colorMapping !== undefined) {\r\n                        sensor.bgcolor = colorMapping.color;\r\n                        sensor.bordercolor = colorMapping.color;\r\n                    }\r\n                }\r\n\r\n                //finally format the value itself\r\n                sensor.valueFormatted = sprintf(sensor.format,mValue.value);\r\n            }\r\n\r\n            \r\n        }\r\n\r\n        function dragEventSetup(sensor) {\r\n            \r\n            window.interact('#' + sensor.metric).draggable({\r\n                inertia: true,\r\n                restrict: {\r\n                restriction: \"#draggableparent\",\r\n                endOnly: true,\r\n                elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\r\n                },\r\n                autoScroll: true,\r\n                onmove: function (event) {\r\n                    var target = event.target,\r\n                    // keep the dragged position in the data-x/data-y attributes\r\n                    x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,\r\n                    y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\r\n\r\n                    // translate the element\r\n                    target.style.webkitTransform =\r\n                    target.style.transform =\r\n                    'translate(' + x + 'px, ' + y + 'px)';\r\n\r\n                    // update the position attributes\r\n                    target.setAttribute('data-x', x);\r\n                    target.setAttribute('data-y', y);\r\n\r\n                },\r\n                onend: function (event) {\r\n                    var target = event.target;\r\n\r\n                    let imageHeight = document.getElementById('pictureit-image').offsetHeight;\r\n                    let imageWidth = document.getElementById('pictureit-image').offsetWidth;\r\n\r\n                    let x = target.getAttribute('data-x');\r\n                    let y = target.getAttribute('data-y')\r\n\r\n                    // get percentage of relative distance from starting point \r\n                    let xpercentage = (x * 100) / imageWidth;\r\n                    let ypercentage = (y * 100) / imageHeight;\r\n\r\n                    // browsers dont render more than 4 decimals so better cut away the others\r\n                    let newX = parseInt(target.style.left) + xpercentage;\r\n                    newX = Math.round(newX * 10000) / 10000\r\n\r\n                    let newY = parseInt(target.style.top) + ypercentage;\r\n                    newY = Math.round(newY * 10000) / 10000\r\n\r\n                    target.style.webkitTransform =\r\n                    target.style.transform =\r\n                    'translate(0px, 0px)';\r\n                    \r\n                    // manually set the new style so I don't need to render() again\r\n                    target.style.left = newX + '%'\r\n                    target.style.top = newY + '%'\r\n\r\n                    // really update the sensor values\r\n                    sensor.xlocation = newX\r\n                    sensor.ylocation = newY\r\n\r\n                    // reset the starting sensor points\r\n                    target.setAttribute('data-x', 0);\r\n                    target.setAttribute('data-y', 0);\r\n                }\r\n            });\r\n        }\r\n\r\n        function alignSensors(){\r\n            for (let group of ctrl.panel.groups) {\r\n                group.nextTop = undefined;\r\n                group.nextX = undefined;\r\n            }\r\n            for (let sensor of ctrl.panel.sensors) {\r\n                var sensorHeight = sensor.size + 30;\r\n                var sensorWidth = sensor.width + 10;\r\n                var group = getGroup(sensor.group.name)\r\n                if(group.alignment == \"left\"){\r\n                    if(group.nextTop === undefined){\r\n                        group.nextTop = group.y;\r\n                    }\r\n                    sensor.ylocationStr = group.nextTop + \"px\";\r\n                    sensor.xlocationStr = group.x + \"px\";\r\n                    group.nextTop = group.nextTop + sensorHeight;\r\n                } else if(group.alignment == \"middle\"){\r\n                    if(group.nextTop === undefined){\r\n                        group.nextTop = group.y;\r\n                    }\r\n                    sensor.ylocationStr = group.nextTop + \"px\";\r\n                    if(group.sameSize){\r\n                        sensor.xlocationStr = (group.x - (group.width/2)) + \"px\";\r\n                    }else{\r\n                        sensor.xlocationStr = (group.x - (sensor.width/2))+ \"px\";\r\n                    }\r\n                    group.nextTop = group.nextTop + sensorHeight;\r\n                } else if(group.alignment == \"right\"){\r\n                    if(group.nextTop === undefined){\r\n                        group.nextTop = group.y;\r\n                    }\r\n                    sensor.ylocationStr = group.nextTop + \"px\";\r\n                    if(group.sameSize){\r\n                        sensor.xlocationStr = (group.x - group.width) + \"px\";\r\n                    }else{\r\n                        sensor.xlocationStr = (group.x - sensor.width)+ \"px\";\r\n                    }\r\n                    group.nextTop = group.nextTop + sensorHeight;\r\n                } else if(group.alignment == \"top\"){\r\n                    if(group.nextX === undefined){\r\n                        group.nextX = group.x;\r\n                    }\r\n                    sensor.xlocationStr = group.nextX + \"px\";\r\n                    sensor.ylocationStr = group.y + \"px\";\r\n                    group.nextX = group.nextX + sensorWidth;\r\n                }    \r\n            }\r\n        }\r\n\r\n        this.events.on('render', function () {\r\n            render();\r\n            ctrl.renderingCompleted();\r\n        });\r\n    }\r\n\r\n    //------------------\r\n    // Color mapping stuff\r\n    //------------------\r\n\r\n    addColorMapping() {\r\n        this.panel.colorMappings.push(new ColorMapping('name', '#FFFFFF'));\r\n        this.refreshColorMappings();\r\n    }\r\n\r\n    removeColorMapping(map) {\r\n        var index = _.indexOf(this.panel.colorMappings, map);\r\n        this.panel.colorMappings.splice(index, 1);\r\n        this.refreshColorMappings();\r\n    }\r\n\r\n    refreshColorMappings() {\r\n        this.panel.colorMappingMap = _.keyBy(this.panel.colorMappings, mapping => mapping.name);\r\n        this.render();\r\n    }\r\n\r\n\r\n    //------------------\r\n    // Mapping stuff\r\n    //------------------\r\n\r\n    addValueMappingMap() {\r\n        this.panel.valueMappings.push(new ValueColorMapping('value', ''));\r\n    }\r\n\r\n    removeValueMappingMap(toRemove) {\r\n        var index = _.indexOf(this.panel.valueMappings, toRemove);\r\n        this.panel.valueMappings.splice(index, 1);\r\n        this.render();\r\n    }\r\n\r\n    /* addRangeMappingMap() {\r\n     this.panel.rangeMappingMap.push({from: '', to: '', text: ''});\r\n     }\r\n\r\n     removeRangeMappingMap(rangeMap) {\r\n     var index = _.indexOf(this.panel.rangeMaps, rangeMap);\r\n     this.panel.rangeMappingMap.splice(index, 1);\r\n     this.render();\r\n     };*/\r\n}\r\n\r\nfunction ValueColorMapping(value,\r\n                           colorName) {\r\n    'use strict';\r\n    this.value = value;\r\n    this.colorName = colorName;\r\n}\r\n\r\n\r\nfunction ColorMapping(name, color) {\r\n    'use strict';\r\n    this.name = name;\r\n    this.color = color;\r\n}\r\n\r\nfunction Sensor(metric,\r\n                xlocation,\r\n                ylocation,\r\n                format,\r\n                bgcolor,\r\n                fontColor,\r\n                size,\r\n                bordercolor,\r\n                visible) {\r\n    'use strict';\r\n    this.metric = metric;\r\n    this.xlocation = xlocation;\r\n    this.ylocation = ylocation;\r\n    this.format = format;\r\n    this.bgcolor = bgcolor;\r\n    this.fontColor = fontColor;\r\n    this.size = size;\r\n    this.bordercolor = bordercolor;\r\n    this.visible = visible;\r\n    this.renderValue = false;\r\n    this.valueFormatted = '';\r\n    this.valueUnit = '';\r\n    this.displayName = '';\r\n    this.link_url = '';\r\n    this.resolvedLink = '';\r\n    this.rectangular = true;\r\n    this.group = 'A';\r\n}\r\n\r\nfunction Group(name, alignment, x, y) {\r\n    'use strict';\r\n    this.name = name;\r\n    this.alignment = alignment;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.sameSize = false;\r\n    this.width = 100;\r\n}\r\nPictureItCtrl.templateUrl = 'module.html';\r\n"]}